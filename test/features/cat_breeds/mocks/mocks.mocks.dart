// Mocks generated by Mockito 5.4.6 from annotations
// in cat_breed/test/features/cat_breeds/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cat_breed/core/core.dart' as _i7;
import 'package:cat_breed/features/cat_breeds/data/data.dart' as _i4;
import 'package:cat_breed/features/cat_breeds/domain/domain.dart' as _i3;
import 'package:dio/dio.dart' as _i2;
import 'package:fpdart/src/either.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCatRepository_1 extends _i1.SmartFake implements _i3.CatRepository {
  _FakeCatRepository_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CatDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCatDatasource extends _i1.Mock implements _i4.CatDatasource {
  @override
  _i5.Future<List<_i4.CatBreedModel>> getBreeds({
    required int? page,
    required int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getBreeds, [], {#page: page, #limit: limit}),
            returnValue: _i5.Future<List<_i4.CatBreedModel>>.value(
              <_i4.CatBreedModel>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<_i4.CatBreedModel>>.value(
                  <_i4.CatBreedModel>[],
                ),
          )
          as _i5.Future<List<_i4.CatBreedModel>>);

  @override
  _i5.Future<List<_i4.CatBreedModel>> getBreedsByQuery({
    required String? query,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getBreedsByQuery, [], {#query: query}),
            returnValue: _i5.Future<List<_i4.CatBreedModel>>.value(
              <_i4.CatBreedModel>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<_i4.CatBreedModel>>.value(
                  <_i4.CatBreedModel>[],
                ),
          )
          as _i5.Future<List<_i4.CatBreedModel>>);
}

/// A class which mocks [CatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCatRepository extends _i1.Mock implements _i3.CatRepository {
  @override
  _i5.Future<_i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>> getBreeds({
    required int? page,
    required int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getBreeds, [], {#page: page, #limit: limit}),
            returnValue:
                _i5.Future<
                  _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                >.value(
                  _i8.dummyValue<
                    _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                  >(
                    this,
                    Invocation.method(#getBreeds, [], {
                      #page: page,
                      #limit: limit,
                    }),
                  ),
                ),
            returnValueForMissingStub:
                _i5.Future<
                  _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                >.value(
                  _i8.dummyValue<
                    _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                  >(
                    this,
                    Invocation.method(#getBreeds, [], {
                      #page: page,
                      #limit: limit,
                    }),
                  ),
                ),
          )
          as _i5.Future<_i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>>);

  @override
  _i5.Future<_i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>>
  getBreedsByQuery({required String? query}) =>
      (super.noSuchMethod(
            Invocation.method(#getBreedsByQuery, [], {#query: query}),
            returnValue:
                _i5.Future<
                  _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                >.value(
                  _i8.dummyValue<
                    _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                  >(
                    this,
                    Invocation.method(#getBreedsByQuery, [], {#query: query}),
                  ),
                ),
            returnValueForMissingStub:
                _i5.Future<
                  _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                >.value(
                  _i8.dummyValue<
                    _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                  >(
                    this,
                    Invocation.method(#getBreedsByQuery, [], {#query: query}),
                  ),
                ),
          )
          as _i5.Future<_i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>>);
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i7.HttpClient {
  @override
  _i5.Future<_i2.Response<dynamic>> get(_i7.GetRequestModel? request) =>
      (super.noSuchMethod(
            Invocation.method(#get, [request]),
            returnValue: _i5.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(#get, [request]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(#get, [request]),
              ),
            ),
          )
          as _i5.Future<_i2.Response<dynamic>>);
}

/// A class which mocks [GetAllCatBreeds].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllCatBreeds extends _i1.Mock implements _i3.GetAllCatBreeds {
  @override
  _i3.CatRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeCatRepository_1(
              this,
              Invocation.getter(#repository),
            ),
            returnValueForMissingStub: _FakeCatRepository_1(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i3.CatRepository);

  @override
  _i5.Future<_i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>> call(
    ({int limit, int page})? params,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#call, [params]),
            returnValue:
                _i5.Future<
                  _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                >.value(
                  _i8.dummyValue<
                    _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                  >(this, Invocation.method(#call, [params])),
                ),
            returnValueForMissingStub:
                _i5.Future<
                  _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                >.value(
                  _i8.dummyValue<
                    _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                  >(this, Invocation.method(#call, [params])),
                ),
          )
          as _i5.Future<_i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>>);
}

/// A class which mocks [SearchCatBreeds].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchCatBreeds extends _i1.Mock implements _i3.SearchCatBreeds {
  @override
  _i3.CatRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeCatRepository_1(
              this,
              Invocation.getter(#repository),
            ),
            returnValueForMissingStub: _FakeCatRepository_1(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i3.CatRepository);

  @override
  _i5.Future<_i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>> call(
    String? params,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#call, [params]),
            returnValue:
                _i5.Future<
                  _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                >.value(
                  _i8.dummyValue<
                    _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                  >(this, Invocation.method(#call, [params])),
                ),
            returnValueForMissingStub:
                _i5.Future<
                  _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                >.value(
                  _i8.dummyValue<
                    _i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>
                  >(this, Invocation.method(#call, [params])),
                ),
          )
          as _i5.Future<_i6.Either<_i7.Failure, List<_i3.CatBreedEntity>>>);
}
